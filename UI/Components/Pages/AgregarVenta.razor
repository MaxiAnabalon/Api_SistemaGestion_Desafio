@page "/AgregarVenta"
@rendermode InteractiveServer
@inject VentasServices servicesVentas;
@inject NavigationManager NavigationManager

<h2>Agregar Nueva Venta</h2>
<div style="position: absolute; top: 20px; right: 20px;">
    <NavLink class="btn btn-primary" href="/">Menu</NavLink>
</div>
<EditForm Model="nuevoVenta" OnValidSubmit="GuardarVenta" FormName="AgregarVentaForm">
    <DataAnnotationsValidator />

     <div class="form-group">
        <label>Comentario</label>
        <InputText @bind-Value="nuevoVenta.comentario" class="form-control" required />
        <ValidationMessage For="@(() => nuevoVenta.comentario)" />
    </div>
    <div class="form-group">
        <label>ID Usuario</label>
        <InputNumber @bind-Value="nuevoVenta.IdUsuario" class="form-control" required />
        <ValidationMessage For="@(() => nuevoVenta.IdUsuario)" />
    </div> 
    <button type="submit" class="btn btn-success">Guardar</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>
 
@code {

    public Venta nuevoVenta = new Venta();

    private async Task GuardarVenta()
    {
        await servicesVentas.InsertVentaSer(nuevoVenta);
        NavigationManager.NavigateTo("/Ventas");
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/Ventas");
    }
}

