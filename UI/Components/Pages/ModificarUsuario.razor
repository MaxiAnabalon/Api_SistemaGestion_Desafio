@page "/ModificarUsuario/{id:int}"
@rendermode InteractiveServer
@inject UsuariosServices servicesUsuarios
@inject NavigationManager NavigationManager


<h2>Modificar Usuarios</h2>
 
@if (nuevoUsuario != null)
{
    <EditForm Model="nuevoUsuario" OnValidSubmit="GuardarUsuario" FormName="ModificarUsuarioForm">
        <DataAnnotationsValidator />
 
        <div class="form-group">
            <label>Nombre</label>
            <InputText @bind-Value="nuevoUsuario.nombre" class="form-control" required />
            <ValidationMessage For="@(() => nuevoUsuario.nombre)" />
        </div>
        <div class="form-group">
            <label>Apellido</label>
            <InputText @bind-Value="nuevoUsuario.apellido" class="form-control" required />
             <ValidationMessage For="@(() => nuevoUsuario.apellido)" />
        </div>
        <div class="form-group">
            <label>Nombre Usuario</label>
            <InputText @bind-Value="nuevoUsuario.nombreDeUsuario" class="form-control" required />
            <ValidationMessage For="@(() => nuevoUsuario.nombreDeUsuario)" />
        </div>
        <div class="form-group">
            <label>Contraseña</label>
            <InputText @bind-Value="nuevoUsuario.contraseña" class="form-control" type="password" required />
            <ValidationMessage For="@(() => nuevoUsuario.contraseña)" />
        </div>
        <div class="form-group">
            <label>Email</label>
            <InputText @bind-Value="nuevoUsuario.email" class="form-control" required />
            <ValidationMessage For="@(() => nuevoUsuario.email)" />
        </div>
        <button type="submit" class="btn btn-success">Guardar Cambios</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
    </EditForm>
}
else
{
    <p>Cargando...</p>
}
 
@code {
    [Parameter]
    public int Id { get; set; }
    public Usuario nuevoUsuario = new Usuario();

    protected override void OnInitialized()
    {
        // Cargar el producto basado en el ID de manera sincrónica
        nuevoUsuario = servicesUsuarios.OneUsuarioSer(Id);
    }

    private void GuardarUsuario()
    {
        // Llama al método UpdateProductoSer con el ID y el producto actualizado
        servicesUsuarios.UpdateUsuarioSer(Id, nuevoUsuario);
        NavigationManager.NavigateTo("/Usuarios");
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/Usuarios");
    }
}
